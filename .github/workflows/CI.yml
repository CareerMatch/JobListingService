name: CI Workflow

on:
  push:
    branches:
      - dev
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: self-hosted

    steps:
      # Step 1: Check out code
      - name: Check out code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      # Step 2: Set up .NET
      - name: Set up .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0'

      # Step 3: Install dotCover
      - name: Install dotCover
        run: |
          dotnet tool install -g JetBrains.dotCover.GlobalTool
          echo "## Adding dotCover to PATH"
          echo "$HOME/.dotnet/tools" >> $GITHUB_PATH

      # Step 4: Restore dependencies
      - name: Restore dependencies
        run: dotnet restore JoblistingService.sln

      # Step 5: Build the application
      - name: Build the application
        run: dotnet build JoblistingService.sln --no-restore --configuration Release

      # Step 6: Run tests with dotCover
      - name: Run tests with dotCover
        run: |
          dotcover cover \
          --TargetExecutable="dotnet" \
          --TargetArguments="test JoblistingService.Test/JoblistingService.Test.csproj --no-restore --verbosity normal" \
          --Output="coverage.snapshot"

      # Step 7: Generate XML Coverage Report
      - name: Generate XML Coverage Report
        run: |
          dotcover report \
          --Source="coverage.snapshot" \
          --Output="coverage.xml" \
          --ReportType="DetailedXML"

      # Step 8: Install SonarCloud Scanner
      - name: Install SonarCloud Scanner
        shell: bash
        run: |
          dotnet tool uninstall --global dotnet-sonarscanner || true
          dotnet tool install --global dotnet-sonarscanner --version 8.0.3

      # Step 9: Begin SonarCloud Analysis
      - name: SonarCloud Begin Analysis
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          dotnet sonarscanner begin \
            /k:"CareerMatch_JobListingService" \
            /o:"careermatch" \
            /d:sonar.host.url="https://sonarcloud.io" \
            /d:sonar.cs.opencover.reportsPaths="coverage.xml" \
            /d:sonar.token="${{ secrets.SONAR_TOKEN }}"

      # Step 10: Rebuild for SonarCloud Analysis
      - name: Build for SonarCloud Analysis
        run: dotnet build JoblistingService.sln --no-restore --configuration Release

      # Step 11: End SonarCloud Analysis
      - name: SonarCloud End Analysis
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          dotnet sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"